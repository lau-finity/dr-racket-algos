;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-beginner-reader.ss" "lang")((modname grades) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor repeating-decimal #f #t none #f () #f)))
;;
;; ***************************************************
;; Kelvin Luu (20606596)
;; CS 135 Winter 2016
;; Assignment 02, Problem 2
;; ***************************************************
;;

(define part-weight 5/100)
(define assign-weight 20/100)
(define mid-weight 25/100)
(define final-weight 50/100)
(define passing-grade 50)
(define failing-grade 46)

(define exam-weight (+ mid-weight final-weight))

;; (cs135-adjust assign exam unadjusted) produces the adjusted
;;   final CS135 grade from the unadjusted based on the results
;;   of assignments and the exam
;; cs135-adjust: Num Num Num -> Num
;; requires: 0 <= assign, exam, unadjusted <= 100
;; Examples:
(check-expect (cs135-adjust 100 70 90) 90)
(check-expect (cs135-adjust 100 49.5 60) 46)
(check-expect (cs135-adjust 49.5 100 70) 46)

(define (cs135-adjust assign exam unadjusted)
  (cond
    [(or (< assign passing-grade)
         (< exam passing-grade))
     (min failing-grade unadjusted)]
    [else unadjusted]))

;; Tests:
(check-expect (cs135-adjust 0 0 0) 0)
(check-expect (cs135-adjust 100 100 100) 100)
(check-expect (cs135-adjust 49.5 49.5 49.5) 46)
(check-expect (cs135-adjust 50 50 49.5) 49.5)
(check-expect (cs135-adjust 50 48 44) 44)
(check-expect (cs135-adjust 48 50 44) 44)

;; (cs135-final-grade mid part assign final) produces the adjusted
;;   CS135 final grade from the five main marking categories: mid
;;   (midterm), part (participation), assign (assignments), and final
;;   (final exam) adjusted to show the passing of assignments and
;;   the weighted exam
;; cs135-final-grade: Num Num Num Num Num -> Num
;; requires: 0 <= mid, part, assign, final <= 100
;; Examples:
(check-expect (cs135-final-grade 100 80 63 90) 86.6)
(check-expect (cs135-final-grade 85 85 85 85) 85)

(define (cs135-final-grade mid part assign final)
  (cs135-adjust assign
                (/ (+ (* mid mid-weight)(* final final-weight))
                   exam-weight)
                (+ (* mid mid-weight)(* part part-weight)
                   (* assign assign-weight)(* final final-weight))))

;; Tests:
(check-expect (cs135-final-grade 100 100 100 100) 100)
(check-expect (cs135-final-grade 0 0 0 0) 0)
(check-expect (cs135-final-grade 50 50 49 100) 46)
(check-expect (cs135-final-grade 50 50 100 49) 46)
(check-expect (cs135-final-grade 50 50 50 50) 50)
(check-expect (cs135-final-grade 50 50 50 46) 46)